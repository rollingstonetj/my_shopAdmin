C51 COMPILER V9.01   XL345                                                                 05/07/2018 20:54:23 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XL345
OBJECT MODULE PLACED IN .\xl345.obj
COMPILER INVOKED BY: E:\BaiduNetdiskDownload\keil\C51\BIN\C51.EXE C:\Users\94963\Desktop\ProgrammableLED-master\software
                    -\src\xl345.c BROWSE DEBUG OBJECTEXTEND PRINT(.\xl345.lst) OBJECT(.\xl345.obj)

line level    source

   1          #include "stm32f10x.h"
*** WARNING C318 IN LINE 1 OF C:\Users\94963\Desktop\ProgrammableLED-master\software\src\xl345.c: can't open file 'stm32
             -f10x.h'
   2          #include "xl345.h"
   3          
   4          /* xl345 cs pin */
   5          #define XL345_CS_PIN   GPIO_Pin_0
   6          #define XL345_CS_PORT  GPIOB 
   7          #define XL345_CS_CLOCK RCC_APB2Periph_GPIOB
   8          
   9          /* spi port */
  10          #define XL345_COM_SPI       SPI1
  11          #define XL345_COM_PORT      GPIOA
  12          #define XL345_COM_RCC       RCC_APB2Periph_GPIOA
  13          #define XL345_COM_SCK_PIN   GPIO_Pin_5
  14          #define XL345_COM_MOSI_PIN  GPIO_Pin_7
  15          #define XL345_COM_MISO_PIN  GPIO_Pin_6
  16          
  17          #define XL345_DISABLE() GPIO_SetBits(XL345_CS_PORT, XL345_CS_PIN); 
  18          #define XL345_ENABLE()  GPIO_ResetBits(XL345_CS_PORT, XL345_CS_PIN);
  19          
  20          /* read and write spi */
  21          static u8 _spi_ReadWriteByte(u8 TxData)
*** ERROR C129 IN LINE 21 OF C:\USERS\94963\DESKTOP\PROGRAMMABLELED-MASTER\SOFTWARE\SRC\XL345.C: missing ';' before '_sp
             -i_ReadWriteByte'
  22          {               
  23                  u8 retry=0;                              
  24                  while((XL345_COM_SPI->SR&1<<1)==0)      
  25                  {
  26                          retry++;
  27                          if(retry>200)return 0;
  28                  }                         
  29          
  30                  XL345_COM_SPI->DR=TxData;                 
  31                  retry=0;
  32                  while((XL345_COM_SPI->SR&1<<0)==0) 
  33                  {
  34                          retry++;
  35                          if(retry>200)return 0;
  36                  }
  37                                                                              
  38                  return XL345_COM_SPI->DR;                           
  39          }
  40          
  41          void XL345_Init(void)
  42          {
  43                  SPI_InitTypeDef  SPI_InitStructure;
  44                  GPIO_InitTypeDef GPIO_InitStructure;
  45                  
  46                  /* Enable SPI1 and GPIOA clocks */
  47                  RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1|XL345_CS_CLOCK, ENABLE);
  48          
  49                  /* Configure SPI pins */
  50                  GPIO_InitStructure.GPIO_Pin = XL345_COM_SCK_PIN;
C51 COMPILER V9.01   XL345                                                                 05/07/2018 20:54:23 PAGE 2   

  51                  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  52                  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  53                  GPIO_Init(XL345_COM_PORT, &GPIO_InitStructure);
  54          
  55                  GPIO_InitStructure.GPIO_Pin = XL345_COM_MOSI_PIN;
  56                  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  57                  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  58                  GPIO_Init(XL345_COM_PORT, &GPIO_InitStructure);
  59          
  60              GPIO_InitStructure.GPIO_Pin = XL345_COM_MISO_PIN;
  61                  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  62                  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
  63                  GPIO_Init(XL345_COM_PORT, &GPIO_InitStructure);
  64          
  65                  /* xl345 CS */
  66              GPIO_InitStructure.GPIO_Pin = XL345_CS_PIN;
  67              GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  68              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  69              GPIO_Init(XL345_CS_PORT, &GPIO_InitStructure);
  70                  GPIO_SetBits(XL345_CS_PORT, XL345_CS_PIN);  
  71          
  72                  /* SPI1 configuration */ 
  73                  SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex; 
  74                  SPI_InitStructure.SPI_Mode = SPI_Mode_Master;                      
  75                  SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;                  
  76                  SPI_InitStructure.SPI_CPOL = SPI_CPOL_High;                                    
  77                  SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;                           
  78                  SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;                                      
  79                  SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_8; 
  80                  SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;                                 
  81                  SPI_InitStructure.SPI_CRCPolynomial = 7;                                                   
  82                  SPI_Init(XL345_COM_SPI, &SPI_InitStructure);
  83                  /* Enable SPI1  */
  84                  SPI_Cmd(XL345_COM_SPI, ENABLE); 
  85                  
  86                  return; 
  87          }
  88          
  89          void XL345_Deinit(void)
  90          {
  91              SPI_Cmd(XL345_COM_SPI, DISABLE);
  92                  RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, DISABLE);
  93          
  94                  return;
  95          }
  96          
  97          void XL345_Read(unsigned char count, unsigned char regaddr, unsigned char* buf)
  98          {
  99                  int i;
 100          
 101                  XL345_ENABLE();
 102          
 103                  //write address
 104                  _spi_ReadWriteByte(regaddr|0xC0);
 105          
 106                  //read data
 107                  for(i = 0; i < count; ++i){
 108                          buf[i] = _spi_ReadWriteByte(0xFF);
 109                  }
 110                  XL345_DISABLE();
 111          
 112                  return;
C51 COMPILER V9.01   XL345                                                                 05/07/2018 20:54:23 PAGE 3   

 113          }
 114          
 115          void XL345_Write(unsigned char count, unsigned char addr, unsigned char *buf)
 116          {
 117                  int i;
 118          
 119                  XL345_ENABLE();
 120          
 121                  _spi_ReadWriteByte(addr|0x40);
 122          
 123                  //write data
 124                  for(i = 0; i < count; ++i){
 125                          _spi_ReadWriteByte(buf[i]);
 126                  }
 127                  XL345_DISABLE();
 128          
 129                  return;
 130          }
 131          

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)
